<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Advanced Rcpp II on SC2</title>
    <link>https://mfasiolo.github.io/sc2-2019/rcpp_advanced_ii/</link>
    <description>Recent content in Advanced Rcpp II on SC2</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://mfasiolo.github.io/sc2-2019/rcpp_advanced_ii/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>3. Rcpp basics</title>
      <link>https://mfasiolo.github.io/sc2-2019/rcpp_advanced_ii/junk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mfasiolo.github.io/sc2-2019/rcpp_advanced_ii/junk/</guid>
      <description>Rcpp via R CMD SHLIB: the old but instructive way    body { text-align: justify}  Rcpp via R CMD SHLIB: the old but instructive way # fObj &amp;lt;- function(.x) .x^2 # # fGrad &amp;lt;- function(.x, h = 1e-3) (fObj(.x+h) - fObj(.x)) / h # # x0 &amp;lt;- x1 &amp;lt;- 2 # xSeq1 &amp;lt;- numeric(500) # # for(ii in 1:500){ # x1 &amp;lt;- x0 - 0.01 * fGrad(x0) # x0 &amp;lt;- x1 # xSeq1[ii] &amp;lt;- x1 # } # # x0 &amp;lt;- x1 &amp;lt;- 2 # xSeq2 &amp;lt;- numeric(500) # # for(ii in 1:500){ # x1 &amp;lt;- x0 - 0.</description>
    </item>
    
  </channel>
</rss>